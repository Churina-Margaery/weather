services:
  nginx:
    image: nginx:alpine
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - weather-network

  frontend:
    build:
      context: ./frontend
      args:
        VITE_WEATHER_SERVER: ${API_URL}
    depends_on:
      - backend
    networks:
      - weather-network

  backend:
    build:
      context: ./backend
    environment:
      - OW_API_KEY=${OW_API_KEY}
      - VC_API_KEY=${VC_API_KEY}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    networks:
      - weather-network

  db:
    image: postgres:17-alpine
    container_name: weather_db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - weather-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U weather_user -d weather_db"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  weather-network:
    driver: bridge

volumes:
  postgres_data:
